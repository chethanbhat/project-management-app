{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref3","getFirebase","auth","then","type","props","profile","react_default","a","createElement","className","NavLink","to","href","onClick","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","console","log","authError","onSubmit","htmlFor","onChange","credentials","_ref2","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","error","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce0b04b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n  const {profile} = props\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n      <li><a href=\"#1\" onClick={props.signOut}>Log Out</a></li>\r\n      <li><NavLink to=\"/\" className='btn btn-floating pink ligthen-1'>{profile.initials}</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((response) => {\r\n      return firestore.collection('users').doc(response.user.uid).set({\r\n        firstName: newUser.firstName, \r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    })\r\n    .then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'})\r\n    }).catch((err) => {\r\n      dispatch({type: 'SIGNUP_ERROR', err})\r\n    });\r\n  }\r\n}\r\n\r\nexport const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({type: 'LOGIN_SUCCESS'})\r\n    }).catch((err) => {\r\n      dispatch({type: 'LOGIN_ERROR', err})\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({type: 'SIGNOUT_SUCCESS'})\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n      <li><NavLink to=\"/signin\">Log In</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const {auth, profile} = props\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n  return (\r\n    <nav className=\"nav wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">JasminePlan</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n  const {notifications} = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">\r\n            Notifications\r\n          </span>\r\n          <ul className=\"notifications\">\r\n            {\r\n              notifications && notifications.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user}:</span>\r\n                    <span> {item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n      <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\r\n            <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id}><ProjectSummary project={project} key={project.id}/></Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList;","import React, {Component} from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render(){\r\n    const {projects, auth, notifications} = this.props;\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    return(\r\n    <div className=\"dashboard container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <ProjectList projects={projects}/>\r\n        </div>\r\n        <div className=\"col s12 m5 offset-m1\">\r\n          <Notifications notifications={notifications} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    notifications: state.firestore.ordered.notifications,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    {collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\r\n  ])\r\n)(Dashboard);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n  const {project, auth} = props;\r\n  if(!auth.uid) return <Redirect to=\"/signin\" />\r\n  if(project){\r\n    return(\r\n    <div className=\"container section project-details\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>{project.content}</p>\r\n        </div>\r\n        <div className=\"card-action grey lighten-4 grey-text\">\r\n          <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n          <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading Project.....</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null ; \r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),   \r\n  firestoreConnect([\r\n    {collection: 'projects'}\r\n  ])\r\n)(ProjectDetails);\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../../store/actions/authActions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n    console.log(this.state);\r\n  }\r\n  render() {\r\n    const {authError, auth} = this.props;\r\n    if(auth.uid) return <Redirect to=\"/\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (credentials) => dispatch(signIn(credentials))\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const {auth, authError} = this.props;\r\n    if(auth.uid) return <Redirect to=\"/\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react';\r\nimport {createProject} from '../../store/actions/projectActions';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    // Redirect user to dashboard\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const {auth} = this.props;\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea id=\"content\" onChange={this.handleChange} className=\"materialize-textarea\"></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    // Make Async Calls\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n        ...project, \r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n    }).then(() => { \r\n      // Dispatch \r\n      dispatch({type: 'CREATE_PROJECT', project: project});\r\n    }).catch((error) => {\r\n      dispatch({type: 'CREATE_PROJECT_ERROR', error});\r\n    });\r\n  }\r\n};","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n           <Navbar />\n           <Switch>\n             <Route exact path='/' component = {Dashboard} />\n             <Route path=\"/project/:id\" component = {ProjectDetails} />\n             <Route path=\"/signin\" component = {SignIn} />\n             <Route path=\"/signup\" component = {SignUp} />\n             <Route path=\"/create\" component = {CreateProject} />\n           </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {...state, authError: null};\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {...state, authError: action.err.message};           \r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {...state, authError: 'Login Failed'}  \r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {...state, authError: null}\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;    \r\n    default: \r\n      return state;  \r\n  }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n  projects: [\r\n    {id: '1', title: 'Complete Net Ninja React-Redux App', content: 'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Earum dolorum illo quam corporis perspiciatis sit, totam deserunt et vitae nesciunt iure, ratione itaque nemo pariatur placeat animi voluptate sapiente non!'},\r\n    {id: '2', title: 'Wes Bos Advanced React Course', content: 'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Earum dolorum illo quam corporis perspiciatis sit, totam deserunt et vitae nesciunt iure, ratione itaque nemo pariatur placeat animi voluptate sapiente non!'},\r\n    {id: '3', title: 'Traversy MERN Stack Course', content: 'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Earum dolorum illo quam corporis perspiciatis sit, totam deserunt et vitae nesciunt iure, ratione itaque nemo pariatur placeat animi voluptate sapiente non!'},\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('created project error', action.error);\r\n      return state;      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\n\r\nimport { combineReducers } from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","  import firebase from 'firebase/app';\r\n  import 'firebase/firestore';\r\n  import 'firebase/auth';\r\n  \r\n  // Initialize Firebase\r\n  var config = {\r\n    apiKey: \"AIzaSyCwZVtOTjNSOrstwnJ-W1qTHjIoUMFq6b4\",\r\n    authDomain: \"jasmine-plan.firebaseapp.com\",\r\n    databaseURL: \"https://jasmine-plan.firebaseio.com\",\r\n    projectId: \"jasmine-plan\",\r\n    storageBucket: \"jasmine-plan.appspot.com\",\r\n    messagingSenderId: \"396509740686\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots: true});\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore ,getFirestore} from 'redux-firestore';\nimport { reactReduxFirebase  ,getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n); \n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}